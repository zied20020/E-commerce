{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\21650\\\\Desktop\\\\ecommerce\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container, Table } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { updateUserProfile } from \"../actions/userActions.js\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport axios from \"axios\";\nimport Message from \"../component/Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProfileScreen extends Component {\n  constructor() {\n    super();\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      this.props.dispatch(updateUserProfile({\n        // id: this.props.getLoginInfoData.userInfo.id,\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password\n      }));\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\",\n      loading: true,\n      myOrders: []\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    axios.get(\"/api/users/profile\", config).then(response => {\n      this.setState({\n        name: response.data.name,\n        email: response.data.email,\n        loading: false\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    axios.get(\"/api/orders/myorders\", config).then(response => {\n      this.setState({\n        myOrders: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    if (!this.props.getLoginInfoData.userInfo) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this);\n    }\n\n    const {\n      name,\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-4\",\n      children: !this.state.loading ? /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"User Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter your name\",\n                value: name,\n                onChange: e => this.setState({\n                  name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter email\",\n                value: email,\n                onChange: e => this.setState({\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"We'll never share your email with anyone else.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Password\",\n                value: password,\n                onChange: e => this.setState({\n                  password: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              className: \"w-100\",\n              onClick: this.submitHandler,\n              children: \"Update profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"My Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            responsive: true,\n            className: \"table-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"TOTAL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"PAID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"DELIVERED\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.myOrders ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: this.state.myOrders.reverse().map((order, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      scope: \"row\",\n                      children: order._id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [\"$\", order.totalPrice]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                        style: {\n                          color: \"red\"\n                        },\n                        className: \"fa fa-times\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: order.isDelivered ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                        style: {\n                          color: \"red\"\n                        },\n                        className: \"fa fa-times\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                        to: `order/${order._id}`,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"light\",\n                          children: \"Details\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 170,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"No order yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getUserDetailsData: state.userDetails\n  };\n};\n\nexport default connect(mapStateToProps)(ProfileScreen);","map":{"version":3,"sources":["C:/Users/21650/Desktop/ecommerce/frontend/src/screens/ProfileScreen.js"],"names":["React","Component","Form","Button","Row","Col","Container","Table","Link","Redirect","LinkContainer","updateUserProfile","connect","Loader","axios","Message","ProfileScreen","constructor","submitHandler","e","preventDefault","props","dispatch","name","state","email","password","confirm_password","loading","myOrders","componentDidMount","window","scrollTo","token","getLoginInfoData","userInfo","config","headers","Authorization","get","then","response","setState","data","catch","error","console","log","render","target","value","reverse","map","order","index","_id","totalPrice","isPaid","paidAt","substring","color","isDelivered","deliveredAt","mapStateToProps","userLogin","getUserDetailsData","userDetails"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Button, Row, Col, Container, Table } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { updateUserProfile } from \"../actions/userActions.js\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../component/Loader\";\r\nimport axios from \"axios\";\r\nimport Message from \"../component/Message\";\r\n\r\nclass ProfileScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirm_password: \"\",\r\n      loading: true,\r\n      myOrders: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    const token = this.props.getLoginInfoData.userInfo.token;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\"/api/users/profile\", config)\r\n      .then((response) => {\r\n        this.setState({\r\n          name: response.data.name,\r\n          email: response.data.email,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    axios\r\n      .get(\"/api/orders/myorders\", config)\r\n      .then((response) => {\r\n        this.setState({\r\n          myOrders: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.props.dispatch(\r\n      updateUserProfile({\r\n        // id: this.props.getLoginInfoData.userInfo.id,\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.getLoginInfoData.userInfo) {\r\n      return <Redirect to='/login' />;\r\n    }\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <Container className='py-4'>\r\n        {!this.state.loading ? (\r\n          <Row>\r\n            <Col md={4}>\r\n              <h3>User Profile</h3>\r\n              <Form>\r\n                <Form.Group controlId='formBasicEmail'>\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter your name'\r\n                    value={name}\r\n                    onChange={(e) => this.setState({ name: e.target.value })}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='formBasicEmail'>\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type='email'\r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => this.setState({ email: e.target.value })}\r\n                  />\r\n                  <Form.Text className='text-muted'>\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='formBasicPassword'>\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    value={password}\r\n                    onChange={(e) =>\r\n                      this.setState({ password: e.target.value })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button\r\n                  variant='primary'\r\n                  type='submit'\r\n                  className='w-100'\r\n                  onClick={this.submitHandler}>\r\n                  Update profile\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n            <Col md={8}>\r\n              <h4>My Orders</h4>\r\n\r\n              <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.myOrders ? (\r\n                    <>\r\n                      {this.state.myOrders.reverse().map((order, index) => {\r\n                        return (\r\n                          <tr>\r\n                            <th scope='row'>{order._id}</th>\r\n                            <td>${order.totalPrice}</td>\r\n                            <td>\r\n                              {order.isPaid ? (\r\n                                order.paidAt.substring(0, 10)\r\n                              ) : (\r\n                                <i\r\n                                  style={{ color: \"red\" }}\r\n                                  className='fa fa-times'></i>\r\n                              )}\r\n                            </td>\r\n                            <td>\r\n                              {order.isDelivered ? (\r\n                                order.deliveredAt.substring(0, 10)\r\n                              ) : (\r\n                                <i\r\n                                  style={{ color: \"red\" }}\r\n                                  className='fa fa-times'></i>\r\n                              )}\r\n                            </td>\r\n\r\n                            <td>\r\n                              <LinkContainer to={`order/${order._id}`}>\r\n                                <Button variant='light'>Details</Button>\r\n                              </LinkContainer>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </>\r\n                  ) : (\r\n                    <h4>No order yet</h4>\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoginInfoData: state.userLogin,\r\n    getUserDetailsData: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProfileScreen);\r\n"]},"metadata":{},"sourceType":"module"}