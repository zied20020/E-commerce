{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ogre\\\\Desktop\\\\ecommerce\\\\frontend\\\\src\\\\screens\\\\Cart.js\";\nimport React, { Component } from \"react\";\nimport { addToCart, removeCartItem } from \"../actions/cartActions\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Container, ListGroup, Form, Image, Button, Card } from \"react-bootstrap\";\nimport Message from \"../component/Message\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.removeFromCartHandler = id => {\n      this.props.dispatch(removeCartItem(id));\n    };\n\n    this.checkoutHandler = () => {\n      if (!this.props.getUserLoginData.userInfo) {\n        return this.props.history.push(\"/login\");\n      } else {\n        return this.props.history.push(\"/shipping\");\n      }\n    };\n  }\n\n  // constructor(){\n  //   super()\n  // }\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    const productId = this.props.match.params.id;\n    const qty = this.props.location.search ? Number(this.props.location.search.split(\"=\")[1]) : 1;\n\n    if (productId) {\n      this.props.dispatch(addToCart(productId, qty));\n    }\n  }\n\n  render() {\n    const {\n      cartItems\n    } = this.props.getcartData;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-4\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Shopping cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n            message: `Your cart is empty`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: cartItems.map(item => {\n              return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 2,\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: item.image,\n                      alt: item.name,\n                      fluid: true,\n                      rounded: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 3,\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/product/${item.product}`,\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 2,\n                    children: [\"$\", item.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 2,\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      value: item.qty,\n                      onChange: e => this.props.dispatch(addToCart(item.product, Number(e.target.value))),\n                      children: [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: x + 1,\n                        children: x + 1\n                      }, x + 1, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 86,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 2,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"button\",\n                      variant: \"light\",\n                      onClick: () => this.removeFromCartHandler(item.product),\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fas fa-trash\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 23\n                }, this)\n              }, item.product, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [\"Subtotal\", \" \", cartItems.reduce((acc, item) => acc + item.qty, 0), \" items $\", cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  className: \"d-block w-100\",\n                  disabled: cartItems.length === 0,\n                  onClick: () => this.checkoutHandler(),\n                  children: \"Proceed to checkout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    getcartData: state.cart,\n    getUserLoginData: state.userLogin\n  };\n};\n\nexport default connect(mapStateToProps)(Cart);","map":{"version":3,"sources":["C:/Users/ogre/Desktop/ecommerce/frontend/src/screens/Cart.js"],"names":["React","Component","addToCart","removeCartItem","connect","Row","Col","Container","ListGroup","Form","Image","Button","Card","Message","Link","Cart","removeFromCartHandler","id","props","dispatch","checkoutHandler","getUserLoginData","userInfo","history","push","componentDidMount","window","scrollTo","productId","match","params","qty","location","search","Number","split","render","cartItems","getcartData","length","map","item","image","name","product","price","e","target","value","Array","countInStock","keys","x","reduce","acc","toFixed","mapStateToProps","state","cart","userLogin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { addToCart, removeCartItem } from \"../actions/cartActions\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  ListGroup,\r\n  Form,\r\n  Image,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../component/Message\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Cart extends Component {\r\n  // constructor(){\r\n  //   super()\r\n\r\n  // }\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    const productId = this.props.match.params.id;\r\n    const qty = this.props.location.search\r\n      ? Number(this.props.location.search.split(\"=\")[1])\r\n      : 1;\r\n\r\n    if (productId) {\r\n      this.props.dispatch(addToCart(productId, qty));\r\n    }\r\n  }\r\n\r\n  removeFromCartHandler = (id) => {\r\n    this.props.dispatch(removeCartItem(id));\r\n  };\r\n\r\n  checkoutHandler = () => {\r\n    if (!this.props.getUserLoginData.userInfo) {\r\n      return this.props.history.push(\"/login\");\r\n    } else {\r\n      return this.props.history.push(\"/shipping\");\r\n    }\r\n  };\r\n  render() {\r\n    const { cartItems } = this.props.getcartData;\r\n    return (\r\n      <Container className='py-4'>\r\n        <Row>\r\n          <Col md={8}>\r\n            <h3>Shopping cart</h3>\r\n            {cartItems.length === 0 ? (\r\n              <Message message={`Your cart is empty`} />\r\n            ) : (\r\n              <ListGroup variant='flush'>\r\n                {cartItems.map((item) => {\r\n                  return (\r\n                    <ListGroup.Item key={item.product}>\r\n                      <Row>\r\n                        <Col md={2}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={2}>${item.price}</Col>\r\n\r\n                        <Col md={2}>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={item.qty}\r\n                            onChange={(e) =>\r\n                              this.props.dispatch(\r\n                                addToCart(item.product, Number(e.target.value))\r\n                              )\r\n                            }>\r\n                            {[...Array(item.countInStock).keys()].map((x) => (\r\n                              <option key={x + 1} value={x + 1}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Control>\r\n                        </Col>\r\n\r\n                        <Col md={2}>\r\n                          <Button\r\n                            type='button'\r\n                            variant='light'\r\n                            onClick={() =>\r\n                              this.removeFromCartHandler(item.product)\r\n                            }>\r\n                            <i className='fas fa-trash'></i>\r\n                          </Button>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  );\r\n                })}\r\n              </ListGroup>\r\n            )}\r\n          </Col>\r\n          <Col md={4}>\r\n            <Card>\r\n              <ListGroup>\r\n                <ListGroup.Item>\r\n                  <h5>\r\n                    Subtotal{\" \"}\r\n                    {cartItems.reduce((acc, item) => acc + item.qty, 0)} items $\r\n                    {cartItems\r\n                      .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                      .toFixed(2)}\r\n                  </h5>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    type='button'\r\n                    className='d-block w-100'\r\n                    disabled={cartItems.length === 0}\r\n                    onClick={() => this.checkoutHandler()}>\r\n                    Proceed to checkout\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getcartData: state.cart,\r\n    getUserLoginData: state.userLogin,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Cart);\r\n"]},"metadata":{},"sourceType":"module"}