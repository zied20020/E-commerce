{"ast":null,"code":"var _jsxFileName = \"D:\\\\ecommerce\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FormContainer from \"../component/FormContainer\";\nimport { getUserDetails } from \"../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport Loader from \"../component/Loader\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UserEditScreen extends Component {\n  constructor() {\n    super();\n\n    this.submitHandler = e => {\n      this.setState({\n        loading: true\n      }); // e.preventDefault();\n\n      const {\n        name,\n        email,\n        isAdmin\n      } = this.state;\n      const data = {\n        name,\n        email,\n        isAdmin\n      };\n      const token = this.props.getLoginInfoData.userInfo.token;\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      axios.put(`/api/users/${this.props.match.params.id}`, data, config).then(response => {\n        this.props.history.push(\"/admin/userlist\");\n        this.setState({\n          name: response.data.user.name,\n          email: response.data.user.email,\n          isAdmin: response.data.user.isAdmin,\n          loading: false\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      isAdmin: false,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.setState({\n      loading: true\n    });\n    const token = this.props.getLoginInfoData.userInfo.token;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    axios.get(`/api/users/${this.props.match.params.id}`, config).then(response => {\n      this.setState({\n        name: response.data.user.name,\n        email: response.data.user.email,\n        isAdmin: response.data.user.isAdmin,\n        loading: false\n      });\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      isAdmin\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/userlist\",\n        className: \"btn btn-light mt-5 ml-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-arrow-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), \" Go back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit User Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), this.state.loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your name\",\n              value: name,\n              onChange: e => this.setState({\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              value: email,\n              onChange: e => this.setState({\n                email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"We'll never share your email with anyone else.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"isAdmin\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"Checkbox\",\n              label: \"Is Admin\",\n              checked: isAdmin,\n              onChange: e => this.setState({\n                isAdmin: e.target.checked\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), false ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            onClick: this.submitHandler,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    getLoginInfoData: state.userLogin,\n    getUserDetailsData: state.getUserDetails\n  };\n};\n\nexport default connect(mapStateToProps)(UserEditScreen);","map":{"version":3,"sources":["D:/ecommerce/frontend/src/screens/UserEditScreen.js"],"names":["React","Component","Form","Button","Row","Col","Container","Link","FormContainer","getUserDetails","connect","Loader","axios","UserEditScreen","constructor","submitHandler","e","setState","loading","name","email","isAdmin","state","data","token","props","getLoginInfoData","userInfo","config","headers","Authorization","put","match","params","id","then","response","history","push","user","catch","error","console","log","componentDidMount","window","scrollTo","get","render","target","value","checked","mapStateToProps","userLogin","getUserDetailsData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormContainer from \"../component/FormContainer\";\r\nimport { getUserDetails } from \"../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../component/Loader\";\r\nimport axios from \"axios\";\r\nclass UserEditScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      isAdmin: false,\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    // e.preventDefault();\r\n    const { name, email, isAdmin } = this.state;\r\n    const data = {\r\n      name,\r\n      email,\r\n      isAdmin,\r\n    };\r\n    const token = this.props.getLoginInfoData.userInfo.token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .put(`/api/users/${this.props.match.params.id}`, data, config)\r\n      .then((response) => {\r\n        this.props.history.push(\"/admin/userlist\");\r\n\r\n        this.setState({\r\n          name: response.data.user.name,\r\n          email: response.data.user.email,\r\n          isAdmin: response.data.user.isAdmin,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const token = this.props.getLoginInfoData.userInfo.token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(`/api/users/${this.props.match.params.id}`, config)\r\n      .then((response) => {\r\n        this.setState({\r\n          name: response.data.user.name,\r\n          email: response.data.user.email,\r\n          isAdmin: response.data.user.isAdmin,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { name, email, isAdmin } = this.state;\r\n    return (\r\n      <>\r\n        <Link to='/admin/userlist' className='btn btn-light mt-5 ml-5'>\r\n          <i className='fa fa-arrow-left'></i> Go back\r\n        </Link>\r\n\r\n        <FormContainer>\r\n          <h2>Edit User Details</h2>\r\n          {this.state.loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <Form>\r\n              <Form.Group controlId='formBasicEmail'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter your name'\r\n                  value={name}\r\n                  onChange={(e) => this.setState({ name: e.target.value })}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='formBasicEmail'>\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  placeholder='Enter email'\r\n                  value={email}\r\n                  onChange={(e) => this.setState({ email: e.target.value })}\r\n                />\r\n                <Form.Text className='text-muted'>\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='isAdmin'>\r\n                <Form.Check\r\n                  type='Checkbox'\r\n                  label='Is Admin'\r\n                  checked={isAdmin}\r\n                  onChange={(e) => this.setState({ isAdmin: e.target.checked })}\r\n                />\r\n              </Form.Group>\r\n\r\n              {false ? (\r\n                <Loader />\r\n              ) : (\r\n                <Button\r\n                  variant='primary'\r\n                  type='submit'\r\n                  onClick={this.submitHandler}>\r\n                  Update\r\n                </Button>\r\n              )}\r\n            </Form>\r\n          )}\r\n        </FormContainer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoginInfoData: state.userLogin,\r\n    getUserDetailsData: state.getUserDetails,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserEditScreen);\r\n"]},"metadata":{},"sourceType":"module"}