[{"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\index.js":"1","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\store.js":"2","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\App.js":"4","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\reducers\\cartReducers.js":"5","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\reducers\\productReducers.js":"6","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\reducers\\orderReducers.js":"7","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\reducers\\userReducers.js":"8","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\ProfileScreen.js":"9","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\Home.js":"10","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\PaymentAddress.js":"11","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\ShipingAddress.js":"12","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\PlaceOrder.js":"13","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\ProductListScreen.js":"14","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\Register.js":"15","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\OrderScreen.js":"16","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\SignScreen.js":"17","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\OrderListScreen.js":"18","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\ProductDetails.js":"19","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\ProductEditScreen.js":"20","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\Footer.js":"21","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\Cart.js":"22","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\UserEditScreen.js":"23","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\Header.js":"24","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\UserListScreen.js":"25","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\constants\\productConstants.js":"26","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\constants\\userConstants.js":"27","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\constants\\cartConstant.js":"28","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\constants\\orderConstants.js":"29","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\actions\\userActions.js":"30","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\Loader.js":"31","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\Message.js":"32","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\Rating.js":"33","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\Meta.js":"34","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\Paginate.js":"35","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\PopularProducts.js":"36","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\ProductCarousel.js":"37","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\FormContainer.js":"38","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\CheckoutSteps.js":"39","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\actions\\productActions.js":"40","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\SearchBox.js":"41","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\actions\\orderActions.js":"42","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\actions\\cartActions.js":"43","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\common\\Error.js":"44"},{"size":620,"mtime":1631973976775,"results":"45","hashOfConfig":"46"},{"size":2376,"mtime":1631973976787,"results":"47","hashOfConfig":"46"},{"size":375,"mtime":1631973976777,"results":"48","hashOfConfig":"46"},{"size":2653,"mtime":1631973976755,"results":"49","hashOfConfig":"46"},{"size":1191,"mtime":1631973976777,"results":"50","hashOfConfig":"46"},{"size":2742,"mtime":1631973976777,"results":"51","hashOfConfig":"46"},{"size":2697,"mtime":1631973976777,"results":"52","hashOfConfig":"46"},{"size":2882,"mtime":1631973976777,"results":"53","hashOfConfig":"46"},{"size":6271,"mtime":1631973976785,"results":"54","hashOfConfig":"46"},{"size":5467,"mtime":1631973976777,"results":"55","hashOfConfig":"46"},{"size":2269,"mtime":1631973976782,"results":"56","hashOfConfig":"46"},{"size":3209,"mtime":1631973976785,"results":"57","hashOfConfig":"46"},{"size":6448,"mtime":1631973976782,"results":"58","hashOfConfig":"46"},{"size":3962,"mtime":1631973976785,"results":"59","hashOfConfig":"46"},{"size":4476,"mtime":1631973976785,"results":"60","hashOfConfig":"46"},{"size":7825,"mtime":1631973976782,"results":"61","hashOfConfig":"46"},{"size":3511,"mtime":1631973976787,"results":"62","hashOfConfig":"46"},{"size":3882,"mtime":1631973976777,"results":"63","hashOfConfig":"46"},{"size":8837,"mtime":1631973976767,"results":"64","hashOfConfig":"46"},{"size":7960,"mtime":1631973976782,"results":"65","hashOfConfig":"46"},{"size":387,"mtime":1631975933394,"results":"66","hashOfConfig":"46"},{"size":4607,"mtime":1631973976777,"results":"67","hashOfConfig":"46"},{"size":4407,"mtime":1631973976787,"results":"68","hashOfConfig":"46"},{"size":3038,"mtime":1631973976765,"results":"69","hashOfConfig":"46"},{"size":3211,"mtime":1631973976787,"results":"70","hashOfConfig":"46"},{"size":1316,"mtime":1631973976775,"results":"71","hashOfConfig":"46"},{"size":1127,"mtime":1631973976775,"results":"72","hashOfConfig":"46"},{"size":246,"mtime":1631973976772,"results":"73","hashOfConfig":"46"},{"size":1054,"mtime":1631973976772,"results":"74","hashOfConfig":"46"},{"size":5216,"mtime":1631973976757,"results":"75","hashOfConfig":"46"},{"size":318,"mtime":1631973976767,"results":"76","hashOfConfig":"46"},{"size":325,"mtime":1631973976767,"results":"77","hashOfConfig":"46"},{"size":1917,"mtime":1631973976767,"results":"78","hashOfConfig":"46"},{"size":630,"mtime":1631973976767,"results":"79","hashOfConfig":"46"},{"size":743,"mtime":1631973976767,"results":"80","hashOfConfig":"46"},{"size":1895,"mtime":1631973976767,"results":"81","hashOfConfig":"46"},{"size":1969,"mtime":1631973976767,"results":"82","hashOfConfig":"46"},{"size":411,"mtime":1631973976765,"results":"83","hashOfConfig":"46"},{"size":1429,"mtime":1631973976762,"results":"84","hashOfConfig":"46"},{"size":4293,"mtime":1631973976757,"results":"85","hashOfConfig":"46"},{"size":1149,"mtime":1631973976767,"results":"86","hashOfConfig":"46"},{"size":4171,"mtime":1631973976757,"results":"87","hashOfConfig":"46"},{"size":1297,"mtime":1631973976757,"results":"88","hashOfConfig":"46"},{"size":472,"mtime":1631973976772,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"70t8r0",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\index.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\store.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\App.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\ProfileScreen.js",["197","198"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Row, Col, Container, Table } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { updateUserProfile } from \"../actions/userActions.js\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../component/Loader\";\r\nimport axios from \"axios\";\r\nimport Message from \"../component/Message\";\r\n\r\nclass ProfileScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirm_password: \"\",\r\n      loading: true,\r\n      myOrders: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    const token = this.props.getLoginInfoData.userInfo.token;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(\"/api/users/profile\", config)\r\n      .then((response) => {\r\n        this.setState({\r\n          name: response.data.name,\r\n          email: response.data.email,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    axios\r\n      .get(\"/api/orders/myorders\", config)\r\n      .then((response) => {\r\n        this.setState({\r\n          myOrders: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.props.dispatch(\r\n      updateUserProfile({\r\n        // id: this.props.getLoginInfoData.userInfo.id,\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.getLoginInfoData.userInfo) {\r\n      return <Redirect to='/login' />;\r\n    }\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <Container className='py-4'>\r\n        {!this.state.loading ? (\r\n          <Row>\r\n            <Col md={4}>\r\n              <h3>User Profile</h3>\r\n              <Form>\r\n                <Form.Group controlId='formBasicEmail'>\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter your name'\r\n                    value={name}\r\n                    onChange={(e) => this.setState({ name: e.target.value })}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='formBasicEmail'>\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type='email'\r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => this.setState({ email: e.target.value })}\r\n                  />\r\n                  <Form.Text className='text-muted'>\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='formBasicPassword'>\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    value={password}\r\n                    onChange={(e) =>\r\n                      this.setState({ password: e.target.value })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button\r\n                  variant='primary'\r\n                  type='submit'\r\n                  className='w-100'\r\n                  onClick={this.submitHandler}>\r\n                  Update profile\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n            <Col md={8}>\r\n              <h4>My Orders</h4>\r\n\r\n              <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.myOrders ? (\r\n                    <>\r\n                      {this.state.myOrders.reverse().map((order, index) => {\r\n                        return (\r\n                          <tr>\r\n                            <th scope='row'>{order._id}</th>\r\n                            <td>${order.totalPrice}</td>\r\n                            <td>\r\n                              {order.isPaid ? (\r\n                                order.paidAt.substring(0, 10)\r\n                              ) : (\r\n                                <i\r\n                                  style={{ color: \"red\" }}\r\n                                  className='fa fa-times'></i>\r\n                              )}\r\n                            </td>\r\n                            <td>\r\n                              {order.isDelivered ? (\r\n                                order.deliveredAt.substring(0, 10)\r\n                              ) : (\r\n                                <i\r\n                                  style={{ color: \"red\" }}\r\n                                  className='fa fa-times'></i>\r\n                              )}\r\n                            </td>\r\n\r\n                            <td>\r\n                              <LinkContainer to={`order/${order._id}`}>\r\n                                <Button variant='light'>Details</Button>\r\n                              </LinkContainer>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </>\r\n                  ) : (\r\n                    <h4>No order yet</h4>\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoginInfoData: state.userLogin,\r\n    getUserDetailsData: state.userDetails,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProfileScreen);\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\Home.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\PaymentAddress.js",["199","200","201","202","203","204"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormContainer from \"../component/FormContainer\";\r\nimport { login } from \"../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../component/Loader\";\r\nimport { savePaymentMethodAddress } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../component/CheckoutSteps\";\r\n\r\nclass PaymentAddress extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      paymentMethod: \"PayPal\",\r\n    };\r\n  }\r\n  submitHandler = (e) => {\r\n    const { paymentMethod } = this.state;\r\n    e.preventDefault();\r\n    this.props.dispatch(savePaymentMethodAddress({ paymentMethod }));\r\n    this.props.history.push(\"/placeorder\");\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    // const paymentAddress = this.props.getcartData;\r\n    // if (paymentAddress) {\r\n    //   this.setState({\r\n    //     paymentMethod: paymentAddress.paymentMethod,\r\n    //   });\r\n    // } else {\r\n    //   return;\r\n    // }\r\n  }\r\n  render() {\r\n    return (\r\n      <FormContainer>\r\n        <CheckoutSteps step1 step2 step3 />\r\n\r\n        <h2>Payment Method</h2>\r\n        <Form>\r\n          <Form.Check\r\n            type='radio'\r\n            label='Paypal or Credit Card'\r\n            id='PayPal'\r\n            name='paymentMethod'\r\n            value='PayPal'\r\n            checked\r\n            onChange={(e) => this.setState({ paymentMethod: e.target.value })}\r\n            className='py-2'\r\n          />\r\n\r\n          {/* <Form.Check\r\n            type='radio'\r\n            label='Stripe'\r\n            id='Stripe'\r\n            name='paymentMethod'\r\n            value='Stripe'\r\n            checked\r\n            onChange={(e) => this.setState({ paymentMethod: e.target.value })}\r\n            className='py-2'\r\n          /> */}\r\n          <br />\r\n          <Button variant='primary' type='submit' onClick={this.submitHandler}>\r\n            Continue\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoginInfoData: state.userLogin,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PaymentAddress);\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\ShipingAddress.js",["205","206","207","208","209"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormContainer from \"../component/FormContainer\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../component/Loader\";\r\nimport CheckoutSteps from \"../component/CheckoutSteps\";\r\n\r\nclass ShipingAddress extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      address: \"\",\r\n      city: \"\",\r\n      postalCode: \"\",\r\n      country: \"\",\r\n    };\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    const { address, city, postalCode, country } = this.state;\r\n    e.preventDefault();\r\n    this.props.dispatch(\r\n      saveShippingAddress({ address, city, postalCode, country })\r\n    );\r\n    this.props.history.push(\"/payment\");\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    const shippingAddress = this.props.getcartData.shippingAddress;\r\n    if (shippingAddress) {\r\n      this.setState({\r\n        address: shippingAddress.address,\r\n        city: shippingAddress.city,\r\n        postalCode: shippingAddress.postalCode,\r\n        country: shippingAddress.country,\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FormContainer>\r\n        <CheckoutSteps step1 step2 />\r\n        <h2>Shipping Address</h2>\r\n        <Form>\r\n          <Form.Group controlId='formBasicEmail'>\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter address'\r\n              value={this.state.address}\r\n              onChange={(e) => this.setState({ address: e.target.value })}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='formBasicPassword'>\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter city'\r\n              value={this.state.city}\r\n              onChange={(e) => this.setState({ city: e.target.value })}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='formBasicEmail'>\r\n            <Form.Label>Postal Code</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter pincode'\r\n              value={this.state.postalCode}\r\n              onChange={(e) => this.setState({ postalCode: e.target.value })}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='formBasicEmail'>\r\n            <Form.Label>Country</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter country'\r\n              value={this.state.country}\r\n              onChange={(e) => this.setState({ country: e.target.value })}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit' onClick={this.submitHandler}>\r\n            Continue\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoginInfoData: state.userLogin,\r\n    getcartData: state.cart,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ShipingAddress);\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\PlaceOrder.js",["210","211","212"],"import React, { Component } from \"react\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { connect } from \"react-redux\";\r\nimport CheckoutSteps from \"../component/CheckoutSteps\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  ListGroup,\r\n  Row,\r\n  Image,\r\n  Card,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../component/Loader\";\r\n\r\nclass PlaceOrder extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      taxPrice: \"\",\r\n      shippingPrice: \"\",\r\n      totalPrice: \"\",\r\n      itemsPrice: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  placeOrderHandler = () => {\r\n    const cart = this.props.getCartData;\r\n    const { taxPrice, shippingPrice, totalPrice, itemsPrice } = this.state;\r\n\r\n    const token = this.props.getLoginInfoData.userInfo.token;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    axios\r\n      .post(\r\n        `/api/orders`,\r\n        {\r\n          orderItems: cart.cartItems,\r\n          shippingAddress: cart.shippingAddress,\r\n          paymentMethod: cart.paymentAddress.paymentMethod,\r\n          taxPrice,\r\n          shippingPrice,\r\n          totalPrice,\r\n          itemsPrice,\r\n        },\r\n        config\r\n      )\r\n      .then((response) => {\r\n        localStorage.removeItem(\"cartItems\", []);\r\n\r\n        this.props.history.push(`/order/${response.data._id}`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const cart = this.props.getCartData;\r\n    const itemsPrice = cart.cartItems\r\n      .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n      .toFixed(2);\r\n\r\n    const shippingPrice = itemsPrice > 100 ? 0 : 100;\r\n    const taxPrice = this.addDecimals(Number((0.05 * itemsPrice).toFixed(2)));\r\n    const totalPrice = (\r\n      Number(itemsPrice) +\r\n      Number(shippingPrice) +\r\n      Number(taxPrice)\r\n    ).toFixed(2);\r\n\r\n    this.setState({\r\n      taxPrice,\r\n      shippingPrice,\r\n      totalPrice,\r\n      itemsPrice,\r\n    });\r\n  }\r\n\r\n  addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  render() {\r\n    const cart = this.props.getCartData;\r\n    const { itemsPrice, shippingPrice, taxPrice, totalPrice } = this.state;\r\n    if (!cart.cartItems) {\r\n      return <Loader />;\r\n    }\r\n\r\n    return (\r\n      <Container className='py-5'>\r\n        <CheckoutSteps step1 step2 step3 step4 />\r\n        <Row>\r\n          <Col ms={8}>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h4>Shipping:</h4>\r\n                <p>\r\n                  {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\r\n                  {cart.shippingAddress.postalCode},{\" \"}\r\n                  {cart.shippingAddress.country}\r\n                </p>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h4>Payment:</h4>\r\n                <p>Method: {cart.paymentAddress.paymentMethod}</p>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h4>Order Items:</h4>\r\n                {cart.cartItems.length === 0 ? (\r\n                  <p>Cart is empty</p>\r\n                ) : (\r\n                  <ListGroup variant='flush'>\r\n                    {cart.cartItems.map((item, index) => {\r\n                      return (\r\n                        <ListGroup.Item key={index}>\r\n                          <Row>\r\n                            <Col md={1}>\r\n                              <Image\r\n                                src={item.image}\r\n                                alt={item.name}\r\n                                fluid\r\n                                rounded\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <Link to={`/product/${item.product}`}>\r\n                                {item.name}\r\n                              </Link>\r\n                            </Col>\r\n\r\n                            <Col md={4}>\r\n                              {item.qty} x ${item.price} = $\r\n                              {item.qty * item.price}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      );\r\n                    })}\r\n                  </ListGroup>\r\n                )}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Card>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h4>Order Summary</h4>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item variant='flush'>\r\n                  <Row>\r\n                    <Col>Items</Col>\r\n                    <Col>${itemsPrice}</Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col>Shipping</Col>\r\n                    <Col>${shippingPrice}</Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col>Tax</Col>\r\n                    <Col>${taxPrice}</Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>Total</Col>\r\n                    <Col>${totalPrice}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    disabled={this.props.getLoginInfoData.userInfo.isAdmin}\r\n                    type='button'\r\n                    className='btn-block'\r\n                    disabled={cart.cartItems.length === 0}\r\n                    onClick={() => this.placeOrderHandler()}>\r\n                    Place Order\r\n                  </Button>\r\n                  {this.props.getLoginInfoData.userInfo.isAdmin && (\r\n                    <label style={{ opacity: 0.8, fontSize: 12 }}>\r\n                      You are not able to buy your own product\r\n                    </label>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoginInfoData: state.userLogin,\r\n    getCartData: state.cart,\r\n    getOrderData: state.createOrder,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PlaceOrder);\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\ProductListScreen.js",["213","214","215"],"import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Form, Button, Row, Col, Container, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport Loader from \"../component/Loader\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\nexport default function UserListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const { success: successDelete } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const { success: successCreate, product: createdProduct } = productCreate;\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/\");\r\n    }\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct.createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts());\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete, successCreate]);\r\n\r\n  const deleteproductHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 100);\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <Container className='mt-5 p-5'>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h2>Products</h2>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <h1>{error}</h1>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>PRICE</th>\r\n              <th>CATEGORY</th>\r\n              <th>BRAND</th>\r\n              <th>In Stock</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          {products === undefined ? (\r\n            <tbody>\r\n              <Button variant='light' onClick={window.location.reload()}>\r\n                <Loader />\r\n              </Button>\r\n            </tbody>\r\n          ) : (\r\n            <tbody>\r\n              {products.map((product) => {\r\n                return (\r\n                  <tr>\r\n                    <th scope='row'>{product._id}</th>\r\n                    <td>{product.name}</td>\r\n                    <td>${product.price}</td>\r\n                    <td>{product.category}</td>\r\n                    <td>{product.brand}</td>\r\n                    <td>{product.countInStock}</td>\r\n\r\n                    <td>\r\n                      <LinkContainer to={`product/${product._id}/edit`}>\r\n                        <Button variant='light' className='btn-sm'>\r\n                          <i className='fas fa-edit'></i>\r\n                        </Button>\r\n                      </LinkContainer>\r\n\r\n                      <Button\r\n                        onClick={() => deleteproductHandler(product._id)}\r\n                        variant='danger'\r\n                        className='btn-sm'>\r\n                        <i className='fas fa-trash'></i>\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          )}\r\n        </Table>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\Register.js",["216"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormContainer from \"../component/FormContainer\";\r\n// import { register } from \"../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../component/Loader\";\r\nimport Error from \"../component/common/Error\";\r\nimport axios from \"axios\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirm_password: \"\",\r\n      error: false,\r\n      confirm_register: false,\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  submitHandler = async (e) => {\r\n    this.setState({\r\n      loader: true,\r\n    });\r\n    e.preventDefault();\r\n    const { name, email, password } = this.state;\r\n    if (!email || !(password.length > 5) || !name.length > 3) {\r\n      this.setState({\r\n        error: true,\r\n        loader: false,\r\n      });\r\n      return;\r\n    }\r\n    // this.props.dispatch(register(name, email, password))\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    await axios\r\n      .post(\"/api/users\", { name, email, password }, config)\r\n      .then((data) => {\r\n        this.setState({\r\n          confirm_register: true,\r\n          error: false,\r\n          loader: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          loader: false,\r\n        });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    if (this.props.getLoginInfoData.userInfo) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n  render() {\r\n    const { name, email, password, confirm_register, loader } = this.state;\r\n\r\n    return (\r\n      <FormContainer>\r\n        <h2>Create account</h2>\r\n        {confirm_register && (\r\n          <Error\r\n            variant='success'\r\n            message={\r\n              <p>\r\n                You have registered succesfully. Please{\" \"}\r\n                <Link to='login'>\r\n                  <span style={{ color: \"red\" }}>signin</span>\r\n                </Link>\r\n              </p>\r\n            }\r\n          />\r\n        )}\r\n        {this.state.error && (\r\n          <Error\r\n            variant='danger'\r\n            message={\r\n              <div>\r\n                <p>Password must be 6 chars long</p>{\" \"}\r\n                <p>Must be a valid email address</p>{\" \"}\r\n                <p>Name is required min 3 chars</p>\r\n              </div>\r\n            }\r\n          />\r\n        )}\r\n        <Form>\r\n          <Form.Group controlId='formBasicEmail'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter your name'\r\n              value={name}\r\n              onChange={(e) => this.setState({ name: e.target.value })}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='formBasicEmail'>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => this.setState({ email: e.target.value })}\r\n            />\r\n            <Form.Text className='text-muted'>\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='formBasicPassword'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Password'\r\n              value={password}\r\n              onChange={(e) => this.setState({ password: e.target.value })}\r\n            />\r\n          </Form.Group>\r\n\r\n          {loader ? (\r\n            <Loader />\r\n          ) : (\r\n            <Button\r\n              disabled={!name || !password || !email}\r\n              variant='primary'\r\n              type='submit'\r\n              onClick={this.submitHandler}>\r\n              Submit\r\n            </Button>\r\n          )}\r\n        </Form>\r\n\r\n        <Row className='py-4 justify-content-md-center'>\r\n          <Col>\r\n            Have an account <Link to='/login'>Login</Link>\r\n          </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoginInfoData: state.userLogin,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Register);\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\OrderScreen.js",["217"],"import React, { Component } from \"react\";\r\nimport { deliveredOrder, payOrder } from \"../actions/orderActions\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { connect } from \"react-redux\";\r\nimport CheckoutSteps from \"../component/CheckoutSteps\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../component/Loader\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  ListGroup,\r\n  Row,\r\n  Image,\r\n  Card,\r\n  Button,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nclass OrderScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      taxPrice: \"\",\r\n      shippingPrice: \"\",\r\n      totalPrice: \"\",\r\n      itemsPrice: \"\",\r\n      data: [],\r\n      sdkReady: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    const addPaypalScript = async () => {\r\n      const { data: clientId } = await axios.get(`/api/config/paypal`);\r\n\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n\r\n      script.onload = () => {\r\n        this.setState({\r\n          sdkReady: true,\r\n        });\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    const token = this.props.getLoginInfoData.userInfo.token;\r\n    const config = {\r\n      headers: {\r\n        // \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    axios\r\n      .get(`/api/orders/${this.props.match.params.id}`, config)\r\n      .then((response) => {\r\n        this.setState({\r\n          data: response.data,\r\n        });\r\n\r\n        if (!response.data.isPaid) {\r\n          if (!window.paypal) {\r\n            addPaypalScript();\r\n          } else {\r\n            this.setState({\r\n              sdkReady: true,\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    // order paid or not\r\n    // console.log(this.state.data);\r\n  }\r\n\r\n  successPaymentHandler = (details, data) => {\r\n    const paymentResult = {\r\n      id: details.id,\r\n      status: details.status,\r\n      update_time: details.update_time,\r\n      email_address: details.payer.email_address,\r\n    };\r\n    this.props.dispatch(payOrder(this.props.match.params.id, paymentResult));\r\n\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 100);\r\n  };\r\n\r\n  orderDeliveredHandler = () => {\r\n    this.props.dispatch(deliveredOrder(this.props.match.params.id));\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 100);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.getLoginInfoData.userInfo) {\r\n      return <Redirect to='/login' />;\r\n    }\r\n\r\n    const order = this.state.data;\r\n\r\n    const user = this.props.getLoginInfoData;\r\n    if (!order.shippingAddress && !order.orderItems) {\r\n      return <Loader />;\r\n    }\r\n\r\n    return (\r\n      <Container className='py-5'>\r\n        <Row>\r\n          <Col ms={8}>\r\n            <h4>Order {order._id}</h4>\r\n\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h4>Shipping:</h4>\r\n                <p>Name: {user.userInfo.name}</p>\r\n                <p>Email: {user.userInfo.email}</p>\r\n                <p>\r\n                  Address: {order.shippingAddress[0].address}{\" \"}\r\n                  {order.shippingAddress[0].city}{\" \"}\r\n                  {order.shippingAddress[0].postalCode}{\" \"}\r\n                  {order.shippingAddress[0].country}\r\n                </p>\r\n\r\n                {order.isDelivered ? (\r\n                  <Alert variant='success'>Delivere at {order.paidAt}</Alert>\r\n                ) : (\r\n                  <Alert variant='danger'>Not Delivered</Alert>\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h4>Payment:</h4>\r\n                <p>Method: {order.paymentMethod}</p>\r\n                {order.isPaid ? (\r\n                  <Alert variant='success'>Paid at {order.paidAt}</Alert>\r\n                ) : (\r\n                  <Alert variant='danger'>Not Paid</Alert>\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h4>Order Items:</h4>\r\n                {order.orderItems.length === 0 ? (\r\n                  <p>Cart is empty</p>\r\n                ) : (\r\n                  <ListGroup variant='flush'>\r\n                    {order.orderItems.map((item, index) => {\r\n                      return (\r\n                        <ListGroup.Item key={index}>\r\n                          <Row>\r\n                            <Col md={1}>\r\n                              <Image\r\n                                src={item.image}\r\n                                alt={item.name}\r\n                                fluid\r\n                                rounded\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <Link to={`/product/${item.product}`}>\r\n                                {item.name}\r\n                              </Link>\r\n                            </Col>\r\n\r\n                            <Col md={4}>\r\n                              {item.qty} x ${item.price} = $\r\n                              {item.qty * item.price}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      );\r\n                    })}\r\n                  </ListGroup>\r\n                )}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Card>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h4>Order Summary</h4>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item variant='flush'>\r\n                  <Row>\r\n                    <Col>Items</Col>\r\n                    <Col>${order.itemsPrice}</Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col>Shipping</Col>\r\n                    <Col>${order.shippingPrice}</Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col>Tax</Col>\r\n                    <Col>${order.taxPrice}</Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>Total</Col>\r\n                    <Col>${order.totalPrice}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                {!order.isPaid && !user.userInfo.isAdmin && (\r\n                  <ListGroup.Item>\r\n                    {!this.state.sdkReady ? (\r\n                      <Loader />\r\n                    ) : (\r\n                      <PayPalButton\r\n                        amount={order.totalPrice}\r\n                        onSuccess={(details, data) =>\r\n                          this.successPaymentHandler(details, data)\r\n                        }\r\n                      />\r\n                    )}\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n                {user.userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      className='btn btn-block'\r\n                      type='button'\r\n                      onClick={this.orderDeliveredHandler}>\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoginInfoData: state.userLogin,\r\n    getCartData: state.cart,\r\n    getOrderDetailsData: state.orderDetails,\r\n    getOrderPaymentData: state.orderPay,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(OrderScreen);\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\SignScreen.js",["218"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormContainer from \"../component/FormContainer\";\r\n// import { login } from \"../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../component/Loader\";\r\nimport Error from \"../component/common/Error\";\r\nimport axios from \"axios\";\r\n\r\nclass SignScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      error: false,\r\n      loader: false,\r\n    };\r\n  }\r\n\r\n  submitHandler = async (e) => {\r\n    this.setState({\r\n      loader: true,\r\n    });\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    if (!email && !password) {\r\n      this.setState({\r\n        error: true,\r\n        loader: false,\r\n      });\r\n      return;\r\n    }\r\n    // this.props.dispatch(login(email, password));\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    await axios\r\n      .post(\"/api/users/login\", { email, password }, config)\r\n      .then((data) => {\r\n        this.setState({\r\n          error: false,\r\n          loader: false,\r\n        });\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data.data));\r\n\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 1);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          loader: false,\r\n          error: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    if (this.props.getLoginInfoData.userInfo) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <FormContainer>\r\n        <h2>Login</h2>\r\n        {this.state.error && (\r\n          <Error variant='danger' message='Email or password wrong!' />\r\n        )}\r\n        <Form>\r\n          <Form.Group controlId='formBasicEmail'>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={this.state.email}\r\n              onChange={(e) => this.setState({ email: e.target.value })}\r\n            />\r\n            <Form.Text className='text-muted'>\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='formBasicPassword'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Password'\r\n              value={this.state.password}\r\n              onChange={(e) => this.setState({ password: e.target.value })}\r\n            />\r\n          </Form.Group>\r\n\r\n          {this.state.loader ? (\r\n            <Loader />\r\n          ) : (\r\n            <Button\r\n              disabled={!this.state.password || !this.state.email}\r\n              variant='primary'\r\n              type='submit'\r\n              onClick={this.submitHandler}>\r\n              Submit\r\n            </Button>\r\n          )}\r\n        </Form>\r\n\r\n        <Row className='py-4 justify-content-md-center'>\r\n          <Col>\r\n            New customer <Link to='/register'>Register</Link>\r\n          </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoginInfoData: state.userLogin,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SignScreen);\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\OrderListScreen.js",["219","220","221","222","223","224"],"import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Form, Button, Row, Col, Container, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listOrders, deleteUser } from \"../actions/orderActions\";\r\nimport Loader from \"../component/Loader\";\r\n\r\nexport default function OrderListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  //   const userDelete = useSelector((state) => state.userDelete);\r\n  //   const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  }, [dispatch, history]);\r\n\r\n  return (\r\n    <Container className='mt-5 p-5'>\r\n      <h2>Orders</h2>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <h1>{error}</h1>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders === undefined ? (\r\n              <tbody>\r\n                <Button variant='light' onClick={window.location.reload()}>\r\n                  <Loader />\r\n                </Button>\r\n              </tbody>\r\n            ) : (\r\n              <>\r\n                {orders.map((order) => {\r\n                  return (\r\n                    <tr key={order._id}>\r\n                      <th scope='row'>{order._id}</th>\r\n                      <td>{order.user && order.user.name}</td>\r\n                      <td>{order.createdAt.substring(0, 10)}</td>\r\n                      <td>${order.totalPrice}</td>\r\n                      <td>\r\n                        {order.isPaid ? (\r\n                          <span style={{ color: \"green\" }}>\r\n                            {order.paidAt.substring(0, 10)}\r\n                          </span>\r\n                        ) : (\r\n                          <i\r\n                            className='fas fa-times'\r\n                            style={{ color: \"red\" }}></i>\r\n                        )}\r\n                      </td>\r\n\r\n                      <td>\r\n                        {order.isDelivered ? (\r\n                          <span style={{ color: \"green\" }}>\r\n                            {order.deliveredAt.substring(0, 10)}\r\n                          </span>\r\n                        ) : (\r\n                          <i\r\n                            className='fas fa-times'\r\n                            style={{ color: \"red\" }}></i>\r\n                        )}\r\n                      </td>\r\n\r\n                      <td>\r\n                        <LinkContainer to={`order/${order._id}`}>\r\n                          <Button variant='light' className='btn-sm'>\r\n                            <i className='fas fa-edit'></i>\r\n                          </Button>\r\n                        </LinkContainer>\r\n\r\n                        <Button\r\n                          //   onClick={() => deleteUserHandler(user._id)}\r\n                          variant='danger'\r\n                          className='btn-sm'>\r\n                          <i className='fas fa-trash'></i>\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\ProductDetails.js",["225","226"],"import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Card,\r\n  ListGroup,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\nimport Rating from \"./Rating\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Meta from \"./Meta\";\r\n\r\nclass ProductDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      Product: [],\r\n      qty: 1,\r\n      rating: 1,\r\n      comment: \"\",\r\n      comment_error: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    this.props.dispatch(listProductDetails(this.props.match.params.id));\r\n  }\r\n\r\n  addToCartHandler = () => {\r\n    this.props.history.push(\r\n      `/cart/${this.props.match.params.id}?qty=${this.state.qty}`\r\n    );\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    if (!this.state.comment) {\r\n      return;\r\n    }\r\n    this.props.dispatch(\r\n      createProductReview(this.props.match.params.id, {\r\n        rating: this.state.rating,\r\n        comment: this.state.comment,\r\n      })\r\n    );\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 10);\r\n  };\r\n  render() {\r\n    const { loading, error, product } = this.props.getProductDetailsData;\r\n    const { userInfo } = this.props.getLoginInfoData;\r\n\r\n    return (\r\n      <div className='py-5 px-5'>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message />\r\n        ) : (\r\n          <>\r\n            <Meta title={product.name} />\r\n            <Row>\r\n              <Col sm={12} md={6} lg={4} xl={4}>\r\n                <Image style={{ width: \"100%\" }} src={product.image} rounded />\r\n              </Col>\r\n              <Col sm={12} md={6} lg={4} xl={4}>\r\n                <Card style={{ border: \"none\" }}>\r\n                  <ListGroup variant='flush'>\r\n                    <ListGroup.Item as='h3'>{product.name}</ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      {/* {product.rating} rating from {product.numReviews} reviews */}\r\n                      <Rating\r\n                        value={product.rating}\r\n                        text={`${product.numReviews} reviews`}\r\n                      />\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      Price:{\" \"}\r\n                      <span style={{ fontWeight: 700 }}>${product.price}</span>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>{product.description}</ListGroup.Item>\r\n                  </ListGroup>\r\n                </Card>\r\n              </Col>\r\n              <Col sm={12} md={6} lg={4} xl={4}>\r\n                <Card>\r\n                  <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Price: </Col>\r\n                        <Col>${product.price}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Status:</Col>\r\n                        <Col>\r\n                          {product.countInStock > 0 ? (\r\n                            <span style={{ color: \"green\" }}>In Stock</span>\r\n                          ) : (\r\n                            <span style={{ color: \"red\" }}>Out of stock</span>\r\n                          )}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty:</Col>\r\n                        <Col>\r\n                          {product.countInStock > 0 ? (\r\n                            <Form.Control\r\n                              as='select'\r\n                              value={this.state.qty}\r\n                              onChange={(e) =>\r\n                                this.setState({ qty: e.target.value })\r\n                              }>\r\n                              {[...Array(product.countInStock).keys()].map(\r\n                                (x) => (\r\n                                  <option key={x + 1} value={x + 1}>\r\n                                    {x + 1}\r\n                                  </option>\r\n                                )\r\n                              )}\r\n                            </Form.Control>\r\n                          ) : (\r\n                            0\r\n                          )}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Button\r\n                        onClick={this.addToCartHandler}\r\n                        disabled={product.countInStock === 0}\r\n                        style={{ width: \"100%\" }}\r\n                        variant='dark'>\r\n                        Add To Cart\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row className='py-5'>\r\n              <Col md={6}>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <h4>Write a customer review</h4>\r\n                    {userInfo ? (\r\n                      <Form>\r\n                        <Form.Group controllId='rating'>\r\n                          <Form.Label>Rating</Form.Label>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={this.state.rating}\r\n                            onChange={(e) =>\r\n                              this.setState({ rating: e.target.value })\r\n                            }>\r\n                            <option value=''>Select...</option>\r\n                            <option value='1'>1 - Poor</option>\r\n                            <option value='2'>2 - Fair</option>\r\n                            <option value='3'>3 - Good</option>\r\n                            <option value='4'>4 - Very Good</option>\r\n                            <option value='5'>5 - Excellent</option>\r\n                          </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controllId='comment'>\r\n                          <Form.Label>Comment</Form.Label>\r\n                          <Form.Control\r\n                            as='textarea'\r\n                            row='3'\r\n                            value={this.state.comment}\r\n                            onChange={(e) =>\r\n                              this.setState({ comment: e.target.value })\r\n                            }></Form.Control>\r\n                          <Form.Text\r\n                            className='text-muted'\r\n                            style={{ color: \"red\" }}>\r\n                            One user is only add one review !!!\r\n                          </Form.Text>\r\n                          <Button\r\n                            disabled={!this.state.comment}\r\n                            type='button'\r\n                            className='my-2'\r\n                            variant='primary'\r\n                            onClick={this.submitHandler}>\r\n                            Submit\r\n                          </Button>\r\n                        </Form.Group>\r\n                      </Form>\r\n                    ) : (\r\n                      <p>\r\n                        Please{\" \"}\r\n                        <Link to='/login' style={{ color: \"red\" }}>\r\n                          sign in\r\n                        </Link>{\" \"}\r\n                        to write a review{\" \"}\r\n                      </p>\r\n                    )}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n\r\n              <Col md={6}>\r\n                <ListGroup variant='flush'>\r\n                  <h4>Reviews</h4>\r\n                  {product.reviews.length === 0 && <p>No reviews</p>}\r\n\r\n                  {product.reviews.map((review) => (\r\n                    <ListGroup.Item key={review._id}>\r\n                      <h6>{review.name}</h6>\r\n                      <Rating value={review.rating} text={``} />\r\n                      <p>{review.createdAt.substring(0, 10)}</p>\r\n                      <p>{review.comment}</p>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getProductDetailsData: state.productDetails,\r\n    getLoginInfoData: state.userLogin,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProductDetails);\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\ProductEditScreen.js",["227","228","229","230","231"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormContainer from \"../component/FormContainer\";\r\nimport { getUserDetails } from \"../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../component/Loader\";\r\nimport axios from \"axios\";\r\n\r\nclass ProductEditScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      price: \"\",\r\n      image: \"\",\r\n      brand: \"\",\r\n      category: \"\",\r\n      countInStock: \"\",\r\n      numReviews: 0,\r\n      imageUrl: \"https://placeimg.com/320/320/animals\",\r\n\r\n      description: \"\",\r\n      loading: true,\r\n      uploading: false,\r\n    };\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    // e.preventDefault();\r\n    const {\r\n      name,\r\n      price,\r\n      image,\r\n      brand,\r\n      category,\r\n      countInStock,\r\n      numReviews,\r\n      description,\r\n    } = this.state;\r\n    const data = {\r\n      name,\r\n      price,\r\n      image,\r\n      brand,\r\n      category,\r\n      countInStock,\r\n      numReviews,\r\n      description,\r\n    };\r\n    const token = this.props.getLoginInfoData.userInfo.token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .put(`/api/products/${this.props.match.params.id}`, data, config)\r\n      .then((response) => {\r\n        this.props.history.push(`/admin/productslist`);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const token = this.props.getLoginInfoData.userInfo.token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(`/api/products/${this.props.match.params.id}`, config)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          name: response.data.name,\r\n          price: response.data.price,\r\n          image: response.data.image,\r\n          brand: response.data.brand,\r\n          category: response.data.category,\r\n          countInStock: response.data.countInStock,\r\n          numReviews: response.data.numReviews,\r\n          description: response.data.description,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  onFileChange = (event) => {\r\n    this.setState({\r\n      uploading: true,\r\n    });\r\n    var formdata = new FormData();\r\n    formdata.append(\"image\", event.target.files[0]);\r\n    formdata.append(\"filetype\", \"IMG\");\r\n    axios({\r\n      method: \"post\",\r\n      url: `/api/upload`,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: formdata,\r\n    })\r\n      .then((res) => {\r\n        this.setState({\r\n          image: res.data,\r\n          uploading: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          uploading: false,\r\n        });\r\n        console.log(\"Error : \" + err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      price,\r\n      image,\r\n      brand,\r\n      category,\r\n      countInStock,\r\n      numReviews,\r\n      description,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Link to='/admin/productslist' className='btn btn-light mt-5 ml-5'>\r\n          <i className='fa fa-arrow-left'></i> Go back\r\n        </Link>\r\n\r\n        <FormContainer>\r\n          <h2>Edit Product Details</h2>\r\n          {this.state.loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <Form>\r\n              {/* <img\r\n                width='320'\r\n                src={`//uploads/image - 1615302608565.png`}\r\n              /> */}\r\n\r\n              <Form.Group controlId='formBasicEmail'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter product name'\r\n                  value={name}\r\n                  onChange={(e) => this.setState({ name: e.target.value })}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='price'>\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter Product Price'\r\n                  value={price}\r\n                  onChange={(e) => this.setState({ price: e.target.value })}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='category'>\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter category'\r\n                  value={category}\r\n                  onChange={(e) => this.setState({ category: e.target.value })}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='category'>\r\n                <Form.Label>Brand</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter category'\r\n                  value={brand}\r\n                  onChange={(e) => this.setState({ brand: e.target.value })}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='countInStock'>\r\n                <Form.Label>Count In Stock</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter stock limit'\r\n                  value={countInStock}\r\n                  onChange={(e) =>\r\n                    this.setState({ countInStock: e.target.value })\r\n                  }\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='description'>\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter description'\r\n                  value={description}\r\n                  onChange={(e) =>\r\n                    this.setState({ description: e.target.value })\r\n                  }\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='image'>\r\n                <Form.Label> Image </Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter image url'\r\n                  value={image}\r\n                  onChange={(e) => this.setState({ image: e.target.value })}\r\n                />\r\n                <Form.File\r\n                  id='img-upload'\r\n                  label='Choose File'\r\n                  custom\r\n                  onChange={this.onFileChange}\r\n                />\r\n\r\n                {this.state.uploading && <Loader />}\r\n              </Form.Group>\r\n\r\n              {/* <Form.Group controlId='isAdmin'>\r\n                <Form.Check\r\n                  type='Checkbox'\r\n                  label='Is Admin'\r\n                  checked={isAdmin}\r\n                  onChange={(e) => this.setState({ isAdmin: e.target.checked })}\r\n                />\r\n              </Form.Group> */}\r\n\r\n              {false ? (\r\n                <Loader />\r\n              ) : (\r\n                <Button\r\n                  variant='primary'\r\n                  type='submit'\r\n                  onClick={this.submitHandler}>\r\n                  Update\r\n                </Button>\r\n              )}\r\n            </Form>\r\n          )}\r\n        </FormContainer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoginInfoData: state.userLogin,\r\n    getUserDetailsData: state.getUserDetails,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProductEditScreen);\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\Footer.js",["232"],"import React, { Component } from \"react\";\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className='d-flex justify-content-center py-5 mt-5'>\r\n        <a href='https://gomycode.com/' target='_blank'>\r\n          <i class='fas fa-code'></i> with <i class='fas fa-heart'></i>{\" \"}\r\n          GoMyCode\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\Cart.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\UserEditScreen.js",["233","234","235","236"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormContainer from \"../component/FormContainer\";\r\nimport { getUserDetails } from \"../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"../component/Loader\";\r\nimport axios from \"axios\";\r\nclass UserEditScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      isAdmin: false,\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    // e.preventDefault();\r\n    const { name, email, isAdmin } = this.state;\r\n    const data = {\r\n      name,\r\n      email,\r\n      isAdmin,\r\n    };\r\n    const token = this.props.getLoginInfoData.userInfo.token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .put(`/api/users/${this.props.match.params.id}`, data, config)\r\n      .then((response) => {\r\n        this.props.history.push(\"/admin/userlist\");\r\n\r\n        this.setState({\r\n          name: response.data.user.name,\r\n          email: response.data.user.email,\r\n          isAdmin: response.data.user.isAdmin,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const token = this.props.getLoginInfoData.userInfo.token;\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    axios\r\n      .get(`/api/users/${this.props.match.params.id}`, config)\r\n      .then((response) => {\r\n        this.setState({\r\n          name: response.data.user.name,\r\n          email: response.data.user.email,\r\n          isAdmin: response.data.user.isAdmin,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { name, email, isAdmin } = this.state;\r\n    return (\r\n      <>\r\n        <Link to='/admin/userlist' className='btn btn-light mt-5 ml-5'>\r\n          <i className='fa fa-arrow-left'></i> Go back\r\n        </Link>\r\n\r\n        <FormContainer>\r\n          <h2>Edit User Details</h2>\r\n          {this.state.loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <Form>\r\n              <Form.Group controlId='formBasicEmail'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter your name'\r\n                  value={name}\r\n                  onChange={(e) => this.setState({ name: e.target.value })}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='formBasicEmail'>\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  placeholder='Enter email'\r\n                  value={email}\r\n                  onChange={(e) => this.setState({ email: e.target.value })}\r\n                />\r\n                <Form.Text className='text-muted'>\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='isAdmin'>\r\n                <Form.Check\r\n                  type='Checkbox'\r\n                  label='Is Admin'\r\n                  checked={isAdmin}\r\n                  onChange={(e) => this.setState({ isAdmin: e.target.checked })}\r\n                />\r\n              </Form.Group>\r\n\r\n              {false ? (\r\n                <Loader />\r\n              ) : (\r\n                <Button\r\n                  variant='primary'\r\n                  type='submit'\r\n                  onClick={this.submitHandler}>\r\n                  Update\r\n                </Button>\r\n              )}\r\n            </Form>\r\n          )}\r\n        </FormContainer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoginInfoData: state.userLogin,\r\n    getUserDetailsData: state.getUserDetails,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserEditScreen);\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\Header.js",["237","238","239","240","241"],"import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  Button,\r\n  FormControl,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { Route } from \"react-router-dom\";\r\nclass Header extends Component {\r\n  logout = () => {\r\n    this.props.dispatch(logout());\r\n    this.props.history.push(\"/login\");\r\n  };\r\n\r\n  render() {\r\n    const { userInfo } = this.props.getLoginInfoData;\r\n    return (\r\n      <header style={{ marginBottom: 95 }}>\r\n        <Navbar bg='light' className='px-5' fixed='top' expand='lg'>\r\n          <Navbar.Brand href='/'>\r\n            <i className='fas fa-shopping-bag'></i>{\" \"}\r\n            <span style={{ color: \"red\", fontWeight: \"700\" }}>e</span>Commerce\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route\r\n              render={({ history, match }) => (\r\n                <SearchBox history={history} match={match} />\r\n              )}\r\n            />\r\n            <Nav className='ml-auto'>\r\n              <Nav.Link>\r\n                <Link to='/cart'>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Link>\r\n              </Nav.Link>\r\n\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title={\"Dashboard\"} id='adminmenu'>\r\n                  <NavDropdown.Item>\r\n                    <Link to='/admin/userlist'>Users</Link>\r\n                  </NavDropdown.Item>\r\n\r\n                  <NavDropdown.Item>\r\n                    <Link to='/admin/productslist'>Products</Link>\r\n                  </NavDropdown.Item>\r\n\r\n                  <NavDropdown.Item>\r\n                    <Link to='/orderslist'>Orders</Link>\r\n                  </NavDropdown.Item>\r\n\r\n                  {/* <NavDropdown.Divider /> */}\r\n                </NavDropdown>\r\n              )}\r\n\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='basic-nav-dropdown'>\r\n                  <NavDropdown.Item>\r\n                    <Link to='/profile'>Profile</Link>\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item onClick={this.logout}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                  {/* <NavDropdown.Divider /> */}\r\n                </NavDropdown>\r\n              ) : (\r\n                <Nav.Link>\r\n                  <Link to='/login'>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Link>\r\n                </Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoginInfoData: state.userLogin,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\screens\\UserListScreen.js",["242","243","244","245","246"],"import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Form, Button, Row, Col, Container, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\nimport Loader from \"../component/Loader\";\r\nexport default function UserListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  }, [dispatch, history, successDelete]);\r\n\r\n  const deleteUserHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n  return (\r\n    <Container className='mt-5 p-5'>\r\n      <h2>Users</h2>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <h1>{error}</h1>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.users === undefined ? (\r\n              \"Something went wrong\"\r\n            ) : (\r\n              <>\r\n                {users.users.map((user) => {\r\n                  return (\r\n                    <tr>\r\n                      <th scope='row'>{user._id}</th>\r\n                      <td>{user.name}</td>\r\n                      <td>{user.email}</td>\r\n                      <td>\r\n                        {user.isAdmin ? (\r\n                          <i\r\n                            className='fas fa-check'\r\n                            style={{ color: \"green\" }}></i>\r\n                        ) : (\r\n                          <i\r\n                            className='fas fa-times'\r\n                            style={{ color: \"red\" }}></i>\r\n                        )}\r\n                      </td>\r\n\r\n                      <td>\r\n                        <LinkContainer to={`user/${user._id}/edit`}>\r\n                          <Button variant='light' className='btn-sm'>\r\n                            <i className='fas fa-edit'></i>\r\n                          </Button>\r\n                        </LinkContainer>\r\n\r\n                        <Button\r\n                          onClick={() => deleteUserHandler(user._id)}\r\n                          variant='danger'\r\n                          className='btn-sm'>\r\n                          <i className='fas fa-trash'></i>\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\constants\\cartConstant.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\Loader.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\Message.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\Rating.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\Meta.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\Paginate.js",["247"],"import React, { Component } from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nexport default class Paginate extends Component {\r\n  render() {\r\n    const { pages, page, isAdmin = false, keyword = \"\" } = this.props;\r\n    return (\r\n      pages > 1 && (\r\n        <Pagination>\r\n          {[...Array(pages).keys()].map((x) => (\r\n            <LinkContainer\r\n              key={x + 1}\r\n              to={\r\n                keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}`\r\n              }>\r\n              <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n            </LinkContainer>\r\n          ))}\r\n        </Pagination>\r\n      )\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\PopularProducts.js",["248","249","250"],"import React, { Component } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Loader from \"./Loader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./_popular.css\";\r\n\r\nexport default class PopularProducts extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      topProduct: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(`/api/products/top/product`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          topProduct: res.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { topProduct } = this.state;\r\n\r\n    if (topProduct === null) {\r\n      return <Loader />;\r\n    }\r\n    return (\r\n      <>\r\n        <h2>Popular Product</h2>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Link to={`/product/${topProduct[0]._id}`}>\r\n              <img src={topProduct[0].image} className='top_0_product' />\r\n              <h5 style={{ position: \"absolute\", right: 30, bottom: 20 }}>\r\n                Shop Now\r\n              </h5>\r\n            </Link>\r\n          </Col>\r\n          <Col>\r\n            <Link to={`/product/${topProduct[1]._id}`}>\r\n              <div>\r\n                <img src={topProduct[1].image} className='top_1_product' />\r\n                <h5 style={{ position: \"absolute\", right: 30, bottom: 290 }}>\r\n                  Shop Now\r\n                </h5>\r\n              </div>\r\n            </Link>\r\n            <Link to={`/product/${topProduct[2]._id}`}>\r\n              <div>\r\n                <img src={topProduct[2].image} className='top_1_product' />\r\n                <h5 style={{ position: \"absolute\", right: 30, bottom: 20 }}>\r\n                  Shop Now\r\n                </h5>\r\n              </div>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\ProductCarousel.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\FormContainer.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\CheckoutSteps.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\actions\\productActions.js",["251"],"import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n} from \"../constants/productConstants.js\";\r\nimport store from \"../store\";\r\n\r\nexport const listProducts = (keyword = \"\", pageNumber = \"\") => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      `/api/products/?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    );\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST });\r\n\r\n    const token = store.getState().userLogin.userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n\r\n    const token = store.getState().userLogin.userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (id, data) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST });\r\n\r\n    const token = store.getState().userLogin.userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    await axios.put(`/api/products/${id}`, data, config);\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview = (id, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\r\n\r\n    const token = store.getState().userLogin.userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(`/api/products/${id}/reviews`, review, config);\r\n    dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\SearchBox.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\actions\\orderActions.js",["252"],"import axios from \"axios\";\r\nimport store from \"../store\";\r\nimport {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DELIVERED_REQUEST,\r\n  ORDER_DELIVERED_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const token = store.getState().userLogin.userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"orders\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const token = store.getState().userLogin.userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const token = store.getState().userLogin.userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliveredOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVERED_REQUEST,\r\n    });\r\n\r\n    const token = store.getState().userLogin.userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVERED_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ORDER_LIST_REQUEST });\r\n\r\n    const token = store.getState().userLogin.userInfo.token;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/orders\", config);\r\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\21650\\Desktop\\ecommerce\\frontend\\src\\component\\common\\Error.js",[],{"ruleId":"253","severity":1,"message":"254","line":3,"column":10,"nodeType":"255","messageId":"256","endLine":3,"endColumn":14},{"ruleId":"253","severity":1,"message":"257","line":9,"column":8,"nodeType":"255","messageId":"256","endLine":9,"endColumn":15},{"ruleId":"253","severity":1,"message":"258","line":2,"column":24,"nodeType":"255","messageId":"256","endLine":2,"endColumn":27},{"ruleId":"253","severity":1,"message":"259","line":2,"column":29,"nodeType":"255","messageId":"256","endLine":2,"endColumn":32},{"ruleId":"253","severity":1,"message":"260","line":2,"column":34,"nodeType":"255","messageId":"256","endLine":2,"endColumn":43},{"ruleId":"253","severity":1,"message":"254","line":3,"column":10,"nodeType":"255","messageId":"256","endLine":3,"endColumn":14},{"ruleId":"253","severity":1,"message":"261","line":5,"column":10,"nodeType":"255","messageId":"256","endLine":5,"endColumn":15},{"ruleId":"253","severity":1,"message":"262","line":7,"column":8,"nodeType":"255","messageId":"256","endLine":7,"endColumn":14},{"ruleId":"253","severity":1,"message":"258","line":2,"column":24,"nodeType":"255","messageId":"256","endLine":2,"endColumn":27},{"ruleId":"253","severity":1,"message":"259","line":2,"column":29,"nodeType":"255","messageId":"256","endLine":2,"endColumn":32},{"ruleId":"253","severity":1,"message":"260","line":2,"column":34,"nodeType":"255","messageId":"256","endLine":2,"endColumn":43},{"ruleId":"253","severity":1,"message":"254","line":3,"column":10,"nodeType":"255","messageId":"256","endLine":3,"endColumn":14},{"ruleId":"253","severity":1,"message":"262","line":7,"column":8,"nodeType":"255","messageId":"256","endLine":7,"endColumn":14},{"ruleId":"253","severity":1,"message":"263","line":2,"column":10,"nodeType":"255","messageId":"256","endLine":2,"endColumn":21},{"ruleId":"264","severity":1,"message":"265","line":68,"column":3,"nodeType":"266","messageId":"267","endLine":88,"endColumn":4},{"ruleId":"268","severity":1,"message":"269","line":192,"column":21,"nodeType":"270","endLine":192,"endColumn":59},{"ruleId":"253","severity":1,"message":"271","line":1,"column":17,"nodeType":"255","messageId":"256","endLine":1,"endColumn":25},{"ruleId":"253","severity":1,"message":"272","line":3,"column":10,"nodeType":"255","messageId":"256","endLine":3,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":39,"column":6,"nodeType":"275","endLine":39,"endColumn":65,"suggestions":"276"},{"ruleId":"253","severity":1,"message":"260","line":2,"column":34,"nodeType":"255","messageId":"256","endLine":2,"endColumn":43},{"ruleId":"253","severity":1,"message":"277","line":5,"column":8,"nodeType":"255","messageId":"256","endLine":5,"endColumn":21},{"ruleId":"253","severity":1,"message":"260","line":2,"column":34,"nodeType":"255","messageId":"256","endLine":2,"endColumn":43},{"ruleId":"253","severity":1,"message":"271","line":1,"column":17,"nodeType":"255","messageId":"256","endLine":1,"endColumn":25},{"ruleId":"253","severity":1,"message":"272","line":3,"column":10,"nodeType":"255","messageId":"256","endLine":3,"endColumn":14},{"ruleId":"253","severity":1,"message":"258","line":3,"column":24,"nodeType":"255","messageId":"256","endLine":3,"endColumn":27},{"ruleId":"253","severity":1,"message":"259","line":3,"column":29,"nodeType":"255","messageId":"256","endLine":3,"endColumn":32},{"ruleId":"253","severity":1,"message":"278","line":5,"column":22,"nodeType":"255","messageId":"256","endLine":5,"endColumn":32},{"ruleId":"273","severity":1,"message":"279","line":28,"column":6,"nodeType":"275","endLine":28,"endColumn":25,"suggestions":"280"},{"ruleId":"253","severity":1,"message":"260","line":3,"column":3,"nodeType":"255","messageId":"256","endLine":3,"endColumn":12},{"ruleId":"253","severity":1,"message":"281","line":13,"column":8,"nodeType":"255","messageId":"256","endLine":13,"endColumn":13},{"ruleId":"253","severity":1,"message":"258","line":2,"column":24,"nodeType":"255","messageId":"256","endLine":2,"endColumn":27},{"ruleId":"253","severity":1,"message":"259","line":2,"column":29,"nodeType":"255","messageId":"256","endLine":2,"endColumn":32},{"ruleId":"253","severity":1,"message":"260","line":2,"column":34,"nodeType":"255","messageId":"256","endLine":2,"endColumn":43},{"ruleId":"253","severity":1,"message":"282","line":5,"column":10,"nodeType":"255","messageId":"256","endLine":5,"endColumn":24},{"ruleId":"253","severity":1,"message":"283","line":151,"column":7,"nodeType":"255","messageId":"256","endLine":151,"endColumn":17},{"ruleId":"284","severity":1,"message":"285","line":7,"column":9,"nodeType":"286","endLine":7,"endColumn":57},{"ruleId":"253","severity":1,"message":"258","line":2,"column":24,"nodeType":"255","messageId":"256","endLine":2,"endColumn":27},{"ruleId":"253","severity":1,"message":"259","line":2,"column":29,"nodeType":"255","messageId":"256","endLine":2,"endColumn":32},{"ruleId":"253","severity":1,"message":"260","line":2,"column":34,"nodeType":"255","messageId":"256","endLine":2,"endColumn":43},{"ruleId":"253","severity":1,"message":"282","line":5,"column":10,"nodeType":"255","messageId":"256","endLine":5,"endColumn":24},{"ruleId":"253","severity":1,"message":"272","line":6,"column":3,"nodeType":"255","messageId":"256","endLine":6,"endColumn":7},{"ruleId":"253","severity":1,"message":"287","line":7,"column":3,"nodeType":"255","messageId":"256","endLine":7,"endColumn":9},{"ruleId":"253","severity":1,"message":"288","line":8,"column":3,"nodeType":"255","messageId":"256","endLine":8,"endColumn":14},{"ruleId":"253","severity":1,"message":"289","line":9,"column":3,"nodeType":"255","messageId":"256","endLine":9,"endColumn":11},{"ruleId":"253","severity":1,"message":"290","line":12,"column":10,"nodeType":"255","messageId":"256","endLine":12,"endColumn":23},{"ruleId":"253","severity":1,"message":"271","line":1,"column":17,"nodeType":"255","messageId":"256","endLine":1,"endColumn":25},{"ruleId":"253","severity":1,"message":"272","line":3,"column":10,"nodeType":"255","messageId":"256","endLine":3,"endColumn":14},{"ruleId":"253","severity":1,"message":"258","line":3,"column":24,"nodeType":"255","messageId":"256","endLine":3,"endColumn":27},{"ruleId":"253","severity":1,"message":"259","line":3,"column":29,"nodeType":"255","messageId":"256","endLine":3,"endColumn":32},{"ruleId":"273","severity":1,"message":"279","line":26,"column":6,"nodeType":"275","endLine":26,"endColumn":40,"suggestions":"291"},{"ruleId":"253","severity":1,"message":"292","line":7,"column":26,"nodeType":"255","messageId":"256","endLine":7,"endColumn":33},{"ruleId":"293","severity":1,"message":"294","line":42,"column":15,"nodeType":"286","endLine":42,"endColumn":74},{"ruleId":"293","severity":1,"message":"294","line":51,"column":17,"nodeType":"286","endLine":51,"endColumn":76},{"ruleId":"293","severity":1,"message":"294","line":59,"column":17,"nodeType":"286","endLine":59,"endColumn":76},{"ruleId":"253","severity":1,"message":"295","line":21,"column":3,"nodeType":"255","messageId":"256","endLine":21,"endColumn":30},{"ruleId":"253","severity":1,"message":"296","line":139,"column":13,"nodeType":"255","messageId":"256","endLine":139,"endColumn":17},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Message' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'login' is defined but never used.","'Loader' is defined but never used.","'createOrder' is defined but never used.","no-dupe-class-members","Duplicate name 'componentDidMount'.","MethodDefinition","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createdProduct.createdProduct._id'. Either include it or remove the dependency array.","ArrayExpression",["297"],"'CheckoutSteps' is defined but never used.","'deleteUser' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["298"],"'axios' is defined but never used.","'getUserDetails' is defined but never used.","'numReviews' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Button' is defined but never used.","'FormControl' is defined but never used.","'Dropdown' is defined but never used.","'LinkContainer' is defined but never used.",["299"],"'isAdmin' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","'data' is assigned a value but never used.",{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},"Update the dependencies array to be: [dispatch, history, userInfo, successDelete, successCreate, createdProduct.createdProduct._id]",{"range":"306","text":"307"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"308","text":"309"},"Update the dependencies array to be: [dispatch, history, successDelete, userInfo]",{"range":"310","text":"311"},[1372,1431],"[dispatch, history, userInfo, successDelete, successCreate, createdProduct.createdProduct._id]",[962,981],"[dispatch, history, userInfo]",[940,974],"[dispatch, history, successDelete, userInfo]"]